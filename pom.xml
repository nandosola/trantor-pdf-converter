<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <organization>
        <name>abstra.cc factor√≠a de software, s.a.</name>
        <url>http://www.abstra.cc</url>
    </organization>
    <licenses>
        <license>
            <name>GNU Lesser General Public License, Version 3.0</name>
            <url>http://www.gnu.org/copyleft/lesser.html</url>
        </license>
    </licenses>
    <groupId>cc.abstra.pasilla</groupId>
    <artifactId>trantor-pdf-converter</artifactId>
    <version>0.1.3</version>
    <packaging>jar</packaging>

    <name>trantor-pdf-converter</name>
    <url>http://github.com/nandosola/trantor-pdf-converter</url>
    <developers>
        <developer>
            <id>nandosola</id>
            <name>Nando Sola</name>
            <email>nando@robotchrist.com</email>
        </developer>
        <developer>
            <id>frobs</id>
            <name>Pedro Rivas</name>
            <email>privasmontero87@gmail.com</email>
        </developer>
    </developers>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <bavaria.file>2009-04-03-Bavaria-pdfa.zip</bavaria.file>
        <isartor.file>isartor-pdfa-2008-08-13.zip</isartor.file>
        <jai.binaries.amd64>jai-1_1_3-lib-linux-amd64.tar.gz</jai.binaries.amd64>
        <imageio.binaries.amd64>jai_imageio-1_1-lib-linux-amd64.tar.gz</imageio.binaries.amd64>
        <jai.binaries.i586>jai-1_1_3-lib-linux-amd64.tar.gz</jai.binaries.i586>
        <imageio.binaries.i586>jai_imageio-1_1-lib-linux-amd64.tar.gz</imageio.binaries.i586>
        <pdfbox.version>2.0.17</pdfbox.version>
        <rubygem.dir>${project.build.directory}/ruby-gem</rubygem.dir>
        <jodconverter.version>3.0-NX10</jodconverter.version>
    </properties>

    <profiles>
        <profile>
            <id>download-test-files</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <skipTestDownloads>false</skipTestDownloads>
                <skipLibDownloads>false</skipLibDownloads>
            </properties>
        </profile>
        <profile>
            <id>skip-test-downloads</id>
            <activation>
                <property>
                    <name>skipTests</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <skipTestDownloads>true</skipTestDownloads>
                <skipLibDownloads>false</skipLibDownloads>
            </properties>
        </profile>
        <profile>
            <id>skip-downloads</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <skipTestDownloads>true</skipTestDownloads>
                <skipLibDownloads>true</skipLibDownloads>
            </properties>
        </profile>
    </profiles>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-http-lightweight</artifactId>
                <version>2.2</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0-beta-4</version>
                <executions>
                    <execution>
                        <id>download-jai-binaries-amd64</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <skip>${skipLibDownloads}</skip>
                            <!-- Installation instructions:
                              http://download.java.net/media/jai/builds/release/1_1_3/INSTALL.html -->
                            <serverId>java-net</serverId>
                            <url>http://download.java.net/media/jai/builds/release/1_1_3</url>
                            <fromFile>${jai.binaries.amd64}</fromFile>
                            <toDir>${project.build.directory}/temp</toDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-imageio-binaries-amd64</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <skip>${skipLibDownloads}</skip>
                            <!-- Installation instructions:
                              http://download.java.net/media/jai-imageio/builds/release/1.1/INSTALL-jai_imageio.html -->
                            <serverId>java-net</serverId>
                            <url>http://download.java.net/media/jai-imageio/builds/release/1.1</url>
                            <fromFile>${imageio.binaries.amd64}</fromFile>
                            <toDir>${project.build.directory}/temp</toDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-jai-binaries-i586</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <skip>${skipLibDownloads}</skip>
                            <serverId>java-net</serverId>
                            <url>http://download.java.net/media/jai/builds/release/1_1_3</url>
                            <fromFile>${jai.binaries.i586}</fromFile>
                            <toDir>${project.build.directory}/temp</toDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-imageio-binaries-i586</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <skip>${skipLibDownloads}</skip>
                            <serverId>java-net</serverId>
                            <url>http://download.java.net/media/jai-imageio/builds/release/1.1</url>
                            <fromFile>${imageio.binaries.i586}</fromFile>
                            <toDir>${project.build.directory}/temp</toDir>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- The tiff files were found around the web.
                          Please contact me if you own the copyright of an image and you want it to be removed -->
                        <id>download-test-tiff-files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTestDownloads}</skip>
                            <serverId>my-s3-account</serverId>
                            <url>https://s3-eu-west-1.amazonaws.com/dev-stuff/imageutils</url>
                            <fromFile>test-resource-tiffs.zip</fromFile>
                            <toDir>${project.build.directory}/temp</toDir>
                        </configuration>
                    </execution>
                    <!-- Specific tasks to circumvent Bavaria & Isartor test suites' restrictive TOS -->
                    <execution>
                        <!-- Redistributing all or parts of the Bavaria report or the accompanying test
                          documents requires written permission of PDFlib GmbH. -->
                        <id>download-bavaria-test-suite</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTestDownloads}</skip>
                            <serverId>pdflib</serverId>
                            <url>http://www.pdflib.com/fileadmin/pdflib/Bavaria</url>
                            <fromFile>${bavaria.file}</fromFile>
                            <toDir>${project.build.directory}/temp</toDir>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Please read the terms of use:
                          http://www.pdfa.org/2011/08/download-isartor-test-suite/
                          (Redistributing all or parts of the Isartor test suite is not allowed )-->
                        <id>download-isartor-test-suite</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTestDownloads}</skip>
                            <serverId>pdfa-association</serverId>
                            <url>http://www.pdfa.org/wp-content/uploads/2011/08</url>
                            <fromFile>${isartor.file}</fromFile>
                            <toDir>${project.build.directory}/temp</toDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                  <execution>
                        <id>create-java-ext-directory</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="create-java-ext-directory">
                              <mkdir dir="${rubygem.dir}/lib/ext/java"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unzip-imageio-data</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipLibDownloads}</skip>
                            <target name="unzip-and-copy-imageio-files">
                              <mkdir dir="${rubygem.dir}/lib/ext/java"/>
                                <untar src="${project.build.directory}/temp/${jai.binaries.amd64}"
                                       dest="${rubygem.dir}/lib/ext/linux-amd64"
                                       compression="gzip">
                                    <patternset>
                                        <include name="**/lib/libmlib_jai.so"/>
                                        <include name="**/lib/mlibwrapper_jai.jar"/>
                                    </patternset>
                                    <mapper type="flatten"/>
                                </untar>
                                <untar src="${project.build.directory}/temp/${imageio.binaries.amd64}"
                                       dest="${rubygem.dir}/lib/ext/linux-amd64"
                                       compression="gzip">
                                    <patternset>
                                        <include name="**/lib/libclib_jiio.so"/>
                                        <include name="**/lib/clibwrapper_jiio.jar"/>
                                    </patternset>
                                    <mapper type="flatten"/>
                                </untar>
                                <untar src="${project.build.directory}/temp/${jai.binaries.i586}"
                                       dest="${rubygem.dir}/lib/ext/linux-i586"
                                       compression="gzip">
                                    <patternset>
                                        <include name="**/lib/libmlib_jai.so"/>
                                        <include name="**/lib/mlibwrapper_jai.jar"/>
                                    </patternset>
                                    <mapper type="flatten"/>
                                </untar>
                                <untar src="${project.build.directory}/temp/${imageio.binaries.i586}"
                                       dest="${rubygem.dir}/lib/ext/linux-i586"
                                       compression="gzip">
                                    <patternset>
                                        <include name="**/lib/libclib_jiio.so"/>
                                        <include name="**/lib/clibwrapper_jiio.jar"/>
                                    </patternset>
                                    <mapper type="flatten"/>
                                </untar>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unzip-test-data</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTestDownloads}</skip>
                            <target name="unzip-and-copy-test-files">

                                <unzip src="${project.build.directory}/temp/test-resource-tiffs.zip"
                                       dest="${project.basedir}/src/test/resources/tiff-files" />

                                <unzip src="${project.build.directory}/temp/${bavaria.file}"
                                       dest="${project.build.directory}/temp" />

                                <unzip src="${project.build.directory}/temp/${isartor.file}"
                                       dest="${project.build.directory}/temp/Bavaria testsuite/nonconforming"/>

                                <fileset id="nok" dir="${project.build.directory}/temp/Bavaria testsuite/nonconforming">
                                    <exclude name="Isartor testsuite/doc/**"/>
                                    <!-- pdfbox's preflight does not work properly with the files below (most likely bugs)
                                      TODO: file bugs at https://issues.apache.org/jira/browse/PDFBOX/component/12315215 -->
                                    <exclude name="**/hopf1971.pdf"/>
                                    <exclude name="**/literat.pdf"/>
                                    <exclude name="**/modules_acrobat9.pdf"/>
                                    <exclude name="**/Pardes13_Art02.pdf"/>
                                    <include name="**/*.pdf"/>
                                </fileset>
                                <fileset id="ok" dir="${project.build.directory}/temp/Bavaria testsuite/conforming">
                                    <!-- pdfbox's preflight does not work properly with the files below (most likely bugs)
                                       TODO: file bugs at https://issues.apache.org/jira/browse/PDFBOX/component/12315215 -->
                                    <exclude name="**/04-Metadaten-KK.pdf"/>
                                    <exclude name="**/adobe7pie.pdf"/>
                                    <exclude name="**/fmbl-2009-01.pdf"/>
                                    <exclude name="**/foerster_diss.pdf"/>
                                    <exclude name="**/good0002.pdf"/>
                                    <exclude name="**/good0011.pdf"/>
                                    <exclude name="**/good0015.pdf"/>
                                    <exclude name="**/jmbl-2009-01.pdf"/>
                                    <exclude name="**/mm_image2pdfa.pdf"/>
                                    <exclude name="**/PDFA_Conference_2009.pdf"/>
                                    <exclude name="**/pdfa1b.pdf"/>
                                    <exclude name="**/pueschel_etal_1987.pdf"/>
                                    <include name="**/*.pdf"/>
                                </fileset>
                                <copy todir="${project.basedir}/src/test/resources/pdf-files/PDFA-1b/nonconforming">
                                    <fileset refid="nok" />
                                    <mapper type="flatten" />
                                </copy>
                                <copy todir="${project.basedir}/src/test/resources/pdf-files/PDFA-1b/conforming">
                                    <fileset refid="ok" />
                                    <mapper type="flatten" />
                                </copy>
                                <!-- Bavaria test suite's "unclear" test files are not used -->
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-gemspec</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${rubygem.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/non-packaged-resources</directory>
                                    <includes>
                                        <include>pdfconverter.gemspec</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-trantor-pdf-converter-loader</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${rubygem.dir}/lib</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/non-packaged-resources</directory>
                                    <includes>
                                        <include>pdfconverter.rb</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-project-license-and-rbenv-version</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${rubygem.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}</directory>
                                    <includes>
                                        <include>LICENSE</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/non-packaged-resources</directory>
                                    <includes>
                                        <include>.ruby-version</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-3rd-party-licenses</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${rubygem.dir}/3rd-party-licenses</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/licenses</directory>
                                    <includes>
                                        <include>jai*/*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                          <outputDirectory>${rubygem.dir}/lib/ext/java</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <stripVersion>true</stripVersion>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-installed</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <type>${project.packaging}</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${rubygem.dir}/lib/ext/java</outputDirectory>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/src/test/resources</directory>
                            <includes>
                                <include>tiff-files/**/*</include>
                                <include>pdf-files/**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>15.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- WARNING: jai-codec and jai-imageio include platform-dependent dependencies, which have been already
              downloaded via the maven-wagon-plugin. -->
            <groupId>com.sun.media</groupId>
            <artifactId>jai_imageio</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.media</groupId>
            <artifactId>jai_codec</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sanselan</groupId>
            <artifactId>sanselan</artifactId>
            <version>0.97-incubator</version>
        </dependency>
        <dependency>
            <groupId>com.mortennobel</groupId> <!-- LGPL v3 -->
            <artifactId>java-image-scaling</artifactId>
            <version>0.8.5</version>
        </dependency>
        <dependency>
            <!-- Nexus-hosted. See: http://code.google.com/p/java-image-scaling/issues/detail?id=12 -->
            <groupId>com.jhlabs</groupId> <!-- APL v2.0 -->
            <artifactId>image-filters</artifactId>
            <version>1.0</version>
        </dependency>
        <!--<dependency>
            <groupId>org.icepdf</groupId>
            <artifactId>icepdf-core</artifactId>
            <version>4.3.3</version>
        </dependency>
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <version>2.6.2</version>
        </dependency>
        -->
        <dependency>
            <groupId>org.apache.pdfbox</groupId>  <!-- APL v2.0 -->
            <artifactId>pdfbox</artifactId>
            <version>${pdfbox.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>  <!-- APL v2.0 -->
            <artifactId>preflight</artifactId>
            <version>${pdfbox.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15</artifactId>
            <version>1.60</version>
            <scope>runtime</scope>
            <!-- JRuby version ~> 1.7.3 bundles the whole openssl enchilada, based on 'bcprov-jdk15'.
              For maximum compatibility, please do not alter the artifact, nor its version -->
        </dependency>
        <dependency>
            <groupId>org.artofsolving.jodconverter</groupId>  <!-- LGPL v3+ -->
            <artifactId>jodconverter-core</artifactId>
            <version>${jodconverter.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
             <scope>test</scope>
        </dependency>
    </dependencies>

</project>
